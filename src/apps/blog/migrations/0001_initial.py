# Generated by Django 3.1.4 on 2021-01-24 16:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='заголовок')),
                ('slug', models.SlugField(unique=True, unique_for_date='publish')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='articles/%Y/%m/%d/', verbose_name='постер')),
                ('description', models.TextField(blank=True, verbose_name='краткое описание')),
                ('content', models.TextField(verbose_name='содержание')),
                ('status', models.CharField(choices=[('STATUS_DRAFT', 'Черновик'), ('STATUS_PUBLISHED', 'Опубликовано')], default='STATUS_DRAFT', max_length=20, verbose_name='статус')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='комменты розрешены')),
                ('publish', models.DateTimeField(default=django.utils.timezone.now, verbose_name='опубликовано')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='автор')),
            ],
            options={
                'verbose_name': 'статья',
                'verbose_name_plural': 'статьи',
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='содержание')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='время')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.article', verbose_name='статья')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='автор комментария')),
            ],
            options={
                'verbose_name': 'комментар',
                'verbose_name_plural': 'комментарии',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ManyToManyField(to='blog.Category', verbose_name='категория'),
        ),
        migrations.AddField(
            model_name='article',
            name='next_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='blog.article', verbose_name='следующая часть'),
        ),
        migrations.AddField(
            model_name='article',
            name='previous_article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous', to='blog.article', verbose_name='предыдущая часть'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
